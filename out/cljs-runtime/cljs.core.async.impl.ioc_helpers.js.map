{"version":3,"sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":";AAYA,0CAAA,1CAAaA;AACb,6CAAA,7CAAaC;AACb,6CAAA,7CAAaC;AACb,gDAAA,hDAAaC;AACb,oDAAA,pDAAaC;AACb,qDAAA,rDAAaC;AACb,kDAAA,lDAAaC;AAEb,+CAAA,/CAAMC,sGAAaC,IAAIC,IAAIC;AAA3B,AACE,QAAMF,IAAIC,KAAIC;;AAEhB,+CAAA,/CAAMC,sGAAaH,IAAIC;AAAvB,AACE,QAAMD,IAAIC;;AAGZ;;;mDAAA,nDAAMG,8GAEHC;AAFH,AAGE,6DAAA,tDAACC,mCAAmB,CAAMD,YAAYZ,AAAA;;;;;;;;;;;;;;;;;;qFAGrCe;;;;;;;;;;;8JAGUE;;IAAAA;;;;iKACGA;;IAAAA;;;;uJACJA;;IAAAA;AAAGF;;;;;;;;;;;;;;;;;;wKALZA;qFAAAA;;;;AADH,8CAAA,9CAAOD,oGACJC;AADH,qFACGA,rFACD,YAAAC,2EAAA;;AAOF,qDAAA,rDAAME,kHAAmBC;AAAzB,AACE,IAAAC,eAAC,AAACV,6CAAYS,MAAMpB,AAAA;AAApB,AAAA,QAAAqB,6CAAAA,oDAAAA,TAA4BD,iCAAAA;;AAE9B,6DAAA,7DAAME,kIAA2BF;AAAjC,AACE,IAAA,AACE,OAACD,mDAAkBC;gBADrB,GAAA,CAAAG,kBAESC;AAFT,SAAAD,LAEmBE;AAFnB,AAGI,AAAa,AAAad,6CAAYS,MAAMd,AAAA;;AAC5C,MAAOmB;;AAJX,AAAA,MAAAF;;;;AAMF,8CAAA,9CAAMG,oGAAON,MAAMO,IAAgBC;AAAnC,AACE,IAAAC,qBAAY,AAAYD,mEAAE,AAACb,4CACM,WAAKgB;AAAL,AACE,IAAAC,uBAAeZ;AAAf,AAAA,CAAAY,qBAAqB9B,AAAA,OAAU6B;;AAA/B,CAAAC,qBAAiC/B,AAAA,OAAU0B;;AAA3CK;AACA,OAACV,2DAA0BF;;AAH9D,AAAA,oBAAAS;AAAA,SAAAA,LAASC;AAAT,AAIE,AAAI,IAAAG,uBAAeb;AAAf,AAAA,CAAAa,4BAAA,AAAAC,PAAqBhC,AAAA,uBAAW4B;;AAAhC,CAAAG,qBAAmChC,AAAA,OAAU0B;;AAA7CM;AAAJ;;AAJF;;;AAQF,6CAAA,7CAAME,kGAAMf,MAAMO,IAAgBC,EAAEQ;AAApC,AACE,IAAAP,qBAAY,AAAWD,mEAAEQ,IAAI,AAACrB,4CAAW,WAAKsB;AAAL,AACE,IAAAC,uBAAelB;AAAf,AAAA,CAAAkB,qBAAqBpC,AAAA,OAAUmC;;AAA/B,CAAAC,qBAAuCrC,AAAA,OAAU0B;;AAAjDW;AACA,OAAChB,2DAA0BF;;AAFtE,AAAA,oBAAAS;AAAA,SAAAA,LAASC;AAAT,AAGE,AAAI,IAAAS,uBAAenB;AAAf,AAAA,CAAAmB,4BAAA,AAAAL,PAAqBhC,AAAA,uBAAW4B;;AAAhC,CAAAS,qBAAmCtC,AAAA,OAAU0B;;AAA7CY;AAAJ;;AAHF;;;AAOF,+CAAA,/CAAMC,sGAAapB,MAAMqB;AAAzB,AACE,IAAkBb,IAAE,CAAMR,MAAMd,AAAA;AAAhC,AACS,GAAU,UAAA,TAAMmC;AAAhB;AAAA,AACE,AAAWb,mEAAEa,MAAM,AAAC1B,4CAAW,WAAKG;AAAL,AAAA;;;;AACjC,AAAaU;;AACbA","names":["cljs.core.async.impl.ioc-helpers/FN-IDX","cljs.core.async.impl.ioc-helpers/STATE-IDX","cljs.core.async.impl.ioc-helpers/VALUE-IDX","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/aset-object","arr","idx","o","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/finished?","state-array","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/fn-handler","f","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers30694","_","cljs.core.async.impl.ioc-helpers/run-state-machine","state","fexpr__30726","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","e30731","js/Object","ex","cljs.core.async.impl.ioc-helpers/take!","blk","c","temp__5821__auto__","cb","x","statearr-30747","statearr-30751","cljs.core/deref","cljs.core.async.impl.ioc-helpers/put!","val","ret-val","statearr-30759","statearr-30760","cljs.core.async.impl.ioc-helpers/return-chan","value"],"sourcesContent":[";;   Copyright (c) Rich Hickey and contributors. All rights reserved.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [_] nil))))\n           (impl/close! c)\n           c))\n\n\n"],"x_google_ignoreList":[0]}