{"version":3,"sources":["shadow/cljs/devtools/client/websocket.cljs"],"mappings":";AASA,AAAA,8CAAA,sDAAAA,pGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,0EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,0EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,4EAAA,5EAAMD,uFACFE;AADJ,AAEG,OAACC,0EAAMC,UAAaF;;;AAFvB,CAAA,4EAAA,5EAAMF,uFAGFK,QAAQH;AAHZ,AAIG,IAAMI,SAAO,AAACC;IACRC,SAAO,KAAAH,QAAUC;AADvB,AAGE,CAAA,AAAME,mBACJ,WAAKC;AAAL,AACE,OAACC,8CAAuBR,QAAQ,AAAQO;;;AAE5C,CAAA,AAAMD,gBACJ,WAAKC;AAAL,AACE,OAACE,+CAAwBT,QAAQO;;;AAErC,CAAA,AAAMD,iBACJ,WAAKC;AAAL,AACE,OAACG,gDAAyBV,QAAQO,EAAEH;;;AAExC,CAAA,AAAME,iBACJ,WAAKC;AAAL,AAEE,OAACI,gDAAyBX,QAAQO;;;AAEtCD;;;AAxBL,CAAA,sEAAA,tEAAMR;;AAAN,AA0BA,6CAAA,7CAAMc,kGAAMN,OAAOO;AAAnB,AACE,OAAOP,YAAOO;;AAEhB,6CAAA,7CAAMC,kGAAMR;AAAZ,AAWE,iBAAA,hBAAM,AAAUA;;AAChB,kBAAA,jBAAM,AAAWA;;AACjB,oBAAA,nBAAM,AAAaA;;AACnB,kBAAA,jBAAM,AAAWA;;AACjB,OAAQA","names":["var_args","G__37360","shadow.cljs.devtools.client.websocket/start","js/Error","runtime","shadow.cljs.devtools.client.websocket.start","js/WebSocket","ws-impl","ws-url","shadow.cljs.devtools.client.env/get-ws-relay-url","socket","e","shadow.cljs.devtools.client.shared/remote-msg","shadow.cljs.devtools.client.shared/remote-open","shadow.cljs.devtools.client.shared/remote-close","shadow.cljs.devtools.client.shared/remote-error","shadow.cljs.devtools.client.websocket/send","msg","shadow.cljs.devtools.client.websocket/stop"],"sourcesContent":["(ns shadow.cljs.devtools.client.websocket\n  (:require\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.cljs.devtools.client.shared :as cljs-shared]\n    [shadow.remote.runtime.cljs.js-builtins]\n    ))\n\n;; FIXME: protocolize the 3 fns\n\n(defn start\n  ([runtime]\n   (start js/WebSocket runtime))\n  ([ws-impl runtime]\n   (let [ws-url (env/get-ws-relay-url)\n         socket (ws-impl. ws-url)]\n\n     (set! socket -onmessage\n       (fn [e]\n         (cljs-shared/remote-msg runtime (.-data e))))\n\n     (set! socket -onopen\n       (fn [e]\n         (cljs-shared/remote-open runtime e)))\n\n     (set! socket -onclose\n       (fn [e]\n         (cljs-shared/remote-close runtime e ws-url)))\n\n     (set! socket -onerror\n       (fn [e]\n         ;; followed by close\n         (cljs-shared/remote-error runtime e)))\n\n     socket)))\n\n(defn send [socket msg]\n  (.send socket msg))\n\n(defn stop [socket]\n  ;; chrome sometimes gets stuck websockets when waking up from sleep\n  ;; at least on my macbook macos chrome, works fine in windows\n  ;; these sockets don't receive messages or send them\n  ;; and will eventually time out after a minute or so\n  ;; at which point we no longer care about close messages as a new one will\n  ;; be active and we don't want to a late onclose message to disconnect that one.\n\n  ;; firefox also has the stuck socket but that is closed pretty much immediately on wake\n  ;; it still shows an error \"was interrupted while loading page\" after a bit\n  ;; can't seem to get rid of that one but it is from the socket we no longer care about anyways\n  (set! (.-onopen socket) nil)\n  (set! (.-onclose socket) nil)\n  (set! (.-onmessage socket) nil)\n  (set! (.-onerror socket) nil)\n  (.close socket))\n\n"],"x_google_ignoreList":[0]}